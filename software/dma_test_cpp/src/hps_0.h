#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x1000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x1007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1540572562

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x2000
#define JTAG_UART_SPAN 8
#define JTAG_UART_END 0x2007
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x3000
#define LED_PIO_SPAN 16
#define LED_PIO_END 0x300f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 0
#define LED_PIO_DATA_WIDTH 7
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE NONE
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 0
#define LED_PIO_HAS_OUT 1
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 127

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'DIPSW_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define DIPSW_PIO_BASE 0x4000
#define DIPSW_PIO_SPAN 16
#define DIPSW_PIO_END 0x400f
#define DIPSW_PIO_IRQ 0
#define DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DIPSW_PIO_CAPTURE 1
#define DIPSW_PIO_DATA_WIDTH 4
#define DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define DIPSW_PIO_EDGE_TYPE ANY
#define DIPSW_PIO_FREQ 50000000
#define DIPSW_PIO_HAS_IN 1
#define DIPSW_PIO_HAS_OUT 0
#define DIPSW_PIO_HAS_TRI 0
#define DIPSW_PIO_IRQ_TYPE EDGE
#define DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUTTON_PIO_'.
 * The prefix is the slave descriptor.
 */
#define BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define BUTTON_PIO_COMPONENT_NAME button_pio
#define BUTTON_PIO_BASE 0x5000
#define BUTTON_PIO_SPAN 16
#define BUTTON_PIO_END 0x500f
#define BUTTON_PIO_IRQ 1
#define BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON_PIO_CAPTURE 1
#define BUTTON_PIO_DATA_WIDTH 2
#define BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define BUTTON_PIO_EDGE_TYPE FALLING
#define BUTTON_PIO_FREQ 50000000
#define BUTTON_PIO_HAS_IN 1
#define BUTTON_PIO_HAS_OUT 0
#define BUTTON_PIO_HAS_TRI 0
#define BUTTON_PIO_IRQ_TYPE EDGE
#define BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * The macros are prefixed with 'ILC_'.
 * The prefix is the slave descriptor.
 */
#define ILC_COMPONENT_TYPE interrupt_latency_counter
#define ILC_COMPONENT_NAME ILC
#define ILC_BASE 0x30000
#define ILC_SPAN 256
#define ILC_END 0x300ff

/*
 * Macros for device 'vip_subsystem_alt_vip_vfr_hdmi', class 'alt_vip_vfr'
 * The macros are prefixed with 'VIP_SUBSYSTEM_ALT_VIP_VFR_HDMI_'.
 * The prefix is the slave descriptor.
 */
#define VIP_SUBSYSTEM_ALT_VIP_VFR_HDMI_COMPONENT_TYPE alt_vip_vfr
#define VIP_SUBSYSTEM_ALT_VIP_VFR_HDMI_COMPONENT_NAME vip_subsystem_alt_vip_vfr_hdmi
#define VIP_SUBSYSTEM_ALT_VIP_VFR_HDMI_BASE 0x31000
#define VIP_SUBSYSTEM_ALT_VIP_VFR_HDMI_SPAN 128
#define VIP_SUBSYSTEM_ALT_VIP_VFR_HDMI_END 0x3107f

/*
 * Macros for device 'modular_sgdma_dispatcher_0_CSR', class 'modular_sgdma_dispatcher'
 * The macros are prefixed with 'MODULAR_SGDMA_DISPATCHER_0_CSR_'.
 * The prefix is the slave descriptor.
 */
#define MODULAR_SGDMA_DISPATCHER_0_CSR_COMPONENT_TYPE modular_sgdma_dispatcher
#define MODULAR_SGDMA_DISPATCHER_0_CSR_COMPONENT_NAME modular_sgdma_dispatcher_0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_BASE 0xa1000
#define MODULAR_SGDMA_DISPATCHER_0_CSR_SPAN 32
#define MODULAR_SGDMA_DISPATCHER_0_CSR_END 0xa101f
#define MODULAR_SGDMA_DISPATCHER_0_CSR_IRQ 4
#define MODULAR_SGDMA_DISPATCHER_0_CSR_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_BURST_WRAPPING_SUPPORT 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_DATA_FIFO_DEPTH 32
#define MODULAR_SGDMA_DISPATCHER_0_CSR_DATA_WIDTH 32
#define MODULAR_SGDMA_DISPATCHER_0_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define MODULAR_SGDMA_DISPATCHER_0_CSR_ENHANCED_FEATURES 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_MAX_BURST_COUNT 2
#define MODULAR_SGDMA_DISPATCHER_0_CSR_MAX_BYTE 1024
#define MODULAR_SGDMA_DISPATCHER_0_CSR_MAX_STRIDE 1
#define MODULAR_SGDMA_DISPATCHER_0_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_RESPONSE_FIFO_DEPTH 256
#define MODULAR_SGDMA_DISPATCHER_0_CSR_RESPONSE_PORT 2
#define MODULAR_SGDMA_DISPATCHER_0_CSR_STRIDE_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'modular_sgdma_dispatcher_0_Descriptor_Slave', class 'modular_sgdma_dispatcher'
 * The macros are prefixed with 'MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_COMPONENT_TYPE modular_sgdma_dispatcher
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_COMPONENT_NAME modular_sgdma_dispatcher_0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_BASE 0xa2000
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_SPAN 16
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_END 0xa200f
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_MAX_BYTE 1024
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_RESPONSE_FIFO_DEPTH 256
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_0_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'modular_sgdma_dispatcher_1_CSR', class 'modular_sgdma_dispatcher'
 * The macros are prefixed with 'MODULAR_SGDMA_DISPATCHER_1_CSR_'.
 * The prefix is the slave descriptor.
 */
#define MODULAR_SGDMA_DISPATCHER_1_CSR_COMPONENT_TYPE modular_sgdma_dispatcher
#define MODULAR_SGDMA_DISPATCHER_1_CSR_COMPONENT_NAME modular_sgdma_dispatcher_1
#define MODULAR_SGDMA_DISPATCHER_1_CSR_BASE 0xa3000
#define MODULAR_SGDMA_DISPATCHER_1_CSR_SPAN 32
#define MODULAR_SGDMA_DISPATCHER_1_CSR_END 0xa301f
#define MODULAR_SGDMA_DISPATCHER_1_CSR_IRQ 3
#define MODULAR_SGDMA_DISPATCHER_1_CSR_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_1_CSR_BURST_WRAPPING_SUPPORT 0
#define MODULAR_SGDMA_DISPATCHER_1_CSR_DATA_FIFO_DEPTH 32
#define MODULAR_SGDMA_DISPATCHER_1_CSR_DATA_WIDTH 32
#define MODULAR_SGDMA_DISPATCHER_1_CSR_DESCRIPTOR_FIFO_DEPTH 256
#define MODULAR_SGDMA_DISPATCHER_1_CSR_ENHANCED_FEATURES 1
#define MODULAR_SGDMA_DISPATCHER_1_CSR_MAX_BURST_COUNT 2
#define MODULAR_SGDMA_DISPATCHER_1_CSR_MAX_BYTE 1024
#define MODULAR_SGDMA_DISPATCHER_1_CSR_MAX_STRIDE 1
#define MODULAR_SGDMA_DISPATCHER_1_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_1_CSR_RESPONSE_FIFO_DEPTH 512
#define MODULAR_SGDMA_DISPATCHER_1_CSR_RESPONSE_PORT 0
#define MODULAR_SGDMA_DISPATCHER_1_CSR_STRIDE_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_1_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'modular_sgdma_dispatcher_1_Descriptor_Slave', class 'modular_sgdma_dispatcher'
 * The macros are prefixed with 'MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_COMPONENT_TYPE modular_sgdma_dispatcher
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_COMPONENT_NAME modular_sgdma_dispatcher_1
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_BASE 0xa4000
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_SPAN 32
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_END 0xa401f
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 256
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 1
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_MAX_BYTE 1024
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_RESPONSE_FIFO_DEPTH 512
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_RESPONSE_PORT 0
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define MODULAR_SGDMA_DISPATCHER_1_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'msgdma_ram2stream_csr', class 'altera_msgdma'
 * The macros are prefixed with 'MSGDMA_RAM2STREAM_CSR_'.
 * The prefix is the slave descriptor.
 */
#define MSGDMA_RAM2STREAM_CSR_COMPONENT_TYPE altera_msgdma
#define MSGDMA_RAM2STREAM_CSR_COMPONENT_NAME msgdma_ram2stream
#define MSGDMA_RAM2STREAM_CSR_BASE 0xa5000
#define MSGDMA_RAM2STREAM_CSR_SPAN 32
#define MSGDMA_RAM2STREAM_CSR_END 0xa501f
#define MSGDMA_RAM2STREAM_CSR_IRQ 5
#define MSGDMA_RAM2STREAM_CSR_BURST_ENABLE 1
#define MSGDMA_RAM2STREAM_CSR_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_RAM2STREAM_CSR_CHANNEL_ENABLE 0
#define MSGDMA_RAM2STREAM_CSR_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_RAM2STREAM_CSR_CHANNEL_WIDTH 8
#define MSGDMA_RAM2STREAM_CSR_DATA_FIFO_DEPTH 256
#define MSGDMA_RAM2STREAM_CSR_DATA_WIDTH 256
#define MSGDMA_RAM2STREAM_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define MSGDMA_RAM2STREAM_CSR_DMA_MODE 1
#define MSGDMA_RAM2STREAM_CSR_ENHANCED_FEATURES 1
#define MSGDMA_RAM2STREAM_CSR_ERROR_ENABLE 0
#define MSGDMA_RAM2STREAM_CSR_ERROR_ENABLE_DERIVED 0
#define MSGDMA_RAM2STREAM_CSR_ERROR_WIDTH 8
#define MSGDMA_RAM2STREAM_CSR_MAX_BURST_COUNT 16
#define MSGDMA_RAM2STREAM_CSR_MAX_BYTE 1048576
#define MSGDMA_RAM2STREAM_CSR_MAX_STRIDE 1
#define MSGDMA_RAM2STREAM_CSR_PACKET_ENABLE 1
#define MSGDMA_RAM2STREAM_CSR_PACKET_ENABLE_DERIVED 1
#define MSGDMA_RAM2STREAM_CSR_PREFETCHER_ENABLE 0
#define MSGDMA_RAM2STREAM_CSR_PROGRAMMABLE_BURST_ENABLE 1
#define MSGDMA_RAM2STREAM_CSR_RESPONSE_PORT 2
#define MSGDMA_RAM2STREAM_CSR_STRIDE_ENABLE 0
#define MSGDMA_RAM2STREAM_CSR_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_RAM2STREAM_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'msgdma_ram2stream_descriptor_slave', class 'altera_msgdma'
 * The macros are prefixed with 'MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_COMPONENT_NAME msgdma_ram2stream
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_BASE 0xa6000
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_SPAN 32
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_END 0xa601f
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 256
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_DATA_WIDTH 256
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_DMA_MODE 1
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 1
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 16
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_MAX_BYTE 1048576
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_PACKET_ENABLE 1
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 1
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 1
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_RAM2STREAM_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'msgdma_stream2ram_csr', class 'altera_msgdma'
 * The macros are prefixed with 'MSGDMA_STREAM2RAM_CSR_'.
 * The prefix is the slave descriptor.
 */
#define MSGDMA_STREAM2RAM_CSR_COMPONENT_TYPE altera_msgdma
#define MSGDMA_STREAM2RAM_CSR_COMPONENT_NAME msgdma_stream2ram
#define MSGDMA_STREAM2RAM_CSR_BASE 0xa7000
#define MSGDMA_STREAM2RAM_CSR_SPAN 32
#define MSGDMA_STREAM2RAM_CSR_END 0xa701f
#define MSGDMA_STREAM2RAM_CSR_IRQ 6
#define MSGDMA_STREAM2RAM_CSR_BURST_ENABLE 1
#define MSGDMA_STREAM2RAM_CSR_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_STREAM2RAM_CSR_CHANNEL_ENABLE 0
#define MSGDMA_STREAM2RAM_CSR_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_STREAM2RAM_CSR_CHANNEL_WIDTH 8
#define MSGDMA_STREAM2RAM_CSR_DATA_FIFO_DEPTH 256
#define MSGDMA_STREAM2RAM_CSR_DATA_WIDTH 256
#define MSGDMA_STREAM2RAM_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define MSGDMA_STREAM2RAM_CSR_DMA_MODE 2
#define MSGDMA_STREAM2RAM_CSR_ENHANCED_FEATURES 1
#define MSGDMA_STREAM2RAM_CSR_ERROR_ENABLE 0
#define MSGDMA_STREAM2RAM_CSR_ERROR_ENABLE_DERIVED 0
#define MSGDMA_STREAM2RAM_CSR_ERROR_WIDTH 8
#define MSGDMA_STREAM2RAM_CSR_MAX_BURST_COUNT 16
#define MSGDMA_STREAM2RAM_CSR_MAX_BYTE 1048576
#define MSGDMA_STREAM2RAM_CSR_MAX_STRIDE 1
#define MSGDMA_STREAM2RAM_CSR_PACKET_ENABLE 1
#define MSGDMA_STREAM2RAM_CSR_PACKET_ENABLE_DERIVED 1
#define MSGDMA_STREAM2RAM_CSR_PREFETCHER_ENABLE 0
#define MSGDMA_STREAM2RAM_CSR_PROGRAMMABLE_BURST_ENABLE 1
#define MSGDMA_STREAM2RAM_CSR_RESPONSE_PORT 2
#define MSGDMA_STREAM2RAM_CSR_STRIDE_ENABLE 0
#define MSGDMA_STREAM2RAM_CSR_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_STREAM2RAM_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'msgdma_stream2ram_descriptor_slave', class 'altera_msgdma'
 * The macros are prefixed with 'MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_COMPONENT_NAME msgdma_stream2ram
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_BASE 0xa8000
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_SPAN 32
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_END 0xa801f
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 256
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_DATA_WIDTH 256
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_DMA_MODE 2
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 1
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 16
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_MAX_BYTE 1048576
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_PACKET_ENABLE 1
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 1
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 1
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_STREAM2RAM_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses


#endif /* _ALTERA_HPS_0_H_ */
